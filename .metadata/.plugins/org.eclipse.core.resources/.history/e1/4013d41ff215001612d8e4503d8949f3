package Screens;

import java.awt.Color;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Random;

public class InstructionApplier {
	// road positions go here
	static final int EMPTY = 0;
	static final int PLAYER = 1;
	static final int COIN = 2;
	static final int NPLAYERS = 3;

	public Object ApplyInstruction(int[] inst) {
		// Instruction Inst = (Instruction)inst;
		HashMap<Integer, Car> cars = new HashMap<Integer, Car>();
		// ArrayList<Car> cars = new ArrayList<Car>();

		// HERE GOES THE LOGIC TO UPDATE THE BOARD WHICH IS THEN RENDERED

		Random generator = new Random();

		for (int i = 0; i < inst.length; i += 2) {
			// if(!cars.containsKey(inst[i])){
			cars.putIfAbsent(inst[i],
					new Car(new Color(generator.nextInt(255), generator.nextInt(255), generator.nextInt(255)), -1, i));
			cars.get(inst[i]).oldPos = cars.get(inst[i]).currentPos;
			cars.get(inst[i]).currentPos = i;

		}

		/*
		 * //if spot is avail, place instructed item in spot
		 * if(Game.map.board[Inst.x][Inst.y] == EMPTY){
		 * Game.map.board[Inst.x][Inst.y] = Inst.newState; //if spot is filled
		 * with a coin, move player on to it }else
		 * if(Game.map.board[Inst.x][Inst.y] == COIN){
		 * Game.map.board[Inst.x][Inst.y] = Inst.newState; //add player to score
		 * db if non existant, or increment if(Game.scores.get(Inst.user) !=
		 * null){ if(Game.scores.get(Inst.user) >= 20){ Game.winner = (Inst.user
		 * + " is the winner!"); }else{
		 * Game.scores.put(Inst.user,Game.scores.get(Inst.user)+1); } }else{
		 * Game.scores.put(Inst.user,1); } Game.map.setScore(Game.scores);
		 * System.out.println(Game.scores.get(Inst.user)); }else if
		 * ((Game.map.board[Inst.x][Inst.y] == PLAYER) && (Inst.newState ==
		 * PLAYER) ){ Game.map.board[Inst.x][Inst.y] = NPLAYERS; }
		 * 
		 * // if the moving player has an old position, set to empty
		 * if(!(Inst.oldx == -1)){ if(Game.map.board[Inst.oldx][Inst.oldy] ==
		 * NPLAYERS){ Game.map.board[Inst.oldx][Inst.oldy] = PLAYER; }else {
		 * Game.map.board[Inst.oldx][Inst.oldy] = EMPTY; } }
		 */

		// THIS IS IMPORTANT TO REFRESH THE BOARD
		// Board.newStateAvailable = true
		return null;
	}
}
