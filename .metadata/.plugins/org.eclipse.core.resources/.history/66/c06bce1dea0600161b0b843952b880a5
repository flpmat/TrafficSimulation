package Screens;

import java.awt.Canvas;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferStrategy;
import java.io.IOException;

import javax.imageio.ImageIO;

public class Road extends Canvas{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	// whether keys are pressed
	private boolean DOWN = false;
	private boolean UP = false;
	private boolean LEFT = false;
	private boolean RIGHT = false;

	// current player xy coordinates
	private static int playerX;
	private static int playerY;

	static RoadBoard map = new RoadBoard(10);
	private Image bgSpr;

	private BufferStrategy strategy;
	
	// Constructor.
	public Road(RoadBoard r) throws InterruptedException, IOException{
		createBufferStrategy(2);
		strategy = getBufferStrategy();
		
			while(true){
				Graphics2D drawing = (Graphics2D) strategy.getDrawGraphics();
				drawing.setColor(Color.white);
				
				logic();
	
				Thread.sleep(20);
				
			    render(drawing);
			    drawing.setFont(new Font("TimesRoman", Font.PLAIN, 10));
			    drawing.setColor(Color.red);
				//drawing.drawString(scoreString, 10, 60 * ((GameBoard)raft.RaftNode.getStateObject()).boardSize + 10);
			    drawing.setFont(new Font("TimesRoman", Font.PLAIN, 30));
				//drawing.drawString(winner, 60*((GameBoard)raft.RaftNode.getStateObject()).boardSize/4, 60 * ((GameBoard)raft.RaftNode.getStateObject()).boardSize/2);
				drawing.dispose();
				strategy.show();
				//debugging - uncomment if you want to see map + movement;
			//	System.out.println(c);
			//	c++;
			//	printMap(mp);
			}
		
	}
	
	/*
	 *  Reads the variables altered by the listener and updates the RoadBoard.
	 *  
	 */
	
	private void logic(){
		// check if player needs to be moved
		int x = 0;
		int y = 0;
		if(UP){
			y -= 1;
			UP = false;
		}
		if(DOWN){
			y += 1;
			DOWN = false;
		}
		if(LEFT){
			x -= 1;
			LEFT = false;
		}
		if(RIGHT){
			x += 1;
			RIGHT = false;
		}
		if((x != 0) || (y != 0)){
			//save old positions
			int oldX = playerX;
			int oldY = playerY;
			
			// update new position
			playerX += x;
			playerY += y;
			
			System.out.printf("Old: %d,%d - New: %d,%d \n",oldX,oldY,playerX,playerY);
			
			// if player goes over boundaries, move to other side
			if(playerX < 0){
				playerX = map.roadSize + playerX;
			}
			if(playerX >= map.roadSize){
				playerX = playerX - map.roadSize;
			}
			if(playerY < 0){
				playerY = map.roadSize + playerY;
			}
			if(playerY >= map.roadSize){
				playerY = playerY - map.roadSize;
			}
			//send or process instruction (note, coords are reversed)
		//	raft.API.pushInstruction(new Instruction(playerY,playerX,PLAYER, oldY, oldX, raft.RaftNode.myAddress));
		}
	}
	
	/*
	 * Responsible for rendering the board screen based on the RoadBoard.
	 */
	private void render(Graphics2D drawing) throws IOException {
		bgSpr = ImageIO.read(getClass().getResource("4way.jpg"));
		drawing.setColor(Color.black);

		for (int i = 0; i < 10; i++) {
			for (int j = 0; j < 10; j++) {
				int xpos = 60 * j;
				int ypos = 60 * i;
				drawing.drawImage(bgSpr, xpos, ypos, null);

			}
		}
	}
	
	

}
